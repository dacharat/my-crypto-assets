// Code generated by MockGen. DO NOT EDIT.
// Source: ./service.go

// Package mock_binance is a generated GoMock package.
package mock_binance

import (
	context "context"
	reflect "reflect"

	binance "github.com/dacharat/my-crypto-assets/pkg/external/binance"
	gomock "github.com/golang/mock/gomock"
)

// MockIBinance is a mock of IBinance interface.
type MockIBinance struct {
	ctrl     *gomock.Controller
	recorder *MockIBinanceMockRecorder
}

// MockIBinanceMockRecorder is the mock recorder for MockIBinance.
type MockIBinanceMockRecorder struct {
	mock *MockIBinance
}

// NewMockIBinance creates a new mock instance.
func NewMockIBinance(ctrl *gomock.Controller) *MockIBinance {
	mock := &MockIBinance{ctrl: ctrl}
	mock.recorder = &MockIBinanceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIBinance) EXPECT() *MockIBinanceMockRecorder {
	return m.recorder
}

// GetAccount mocks base method.
func (m *MockIBinance) GetAccount(ctx context.Context) (binance.GetAccountResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAccount", ctx)
	ret0, _ := ret[0].(binance.GetAccountResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAccount indicates an expected call of GetAccount.
func (mr *MockIBinanceMockRecorder) GetAccount(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccount", reflect.TypeOf((*MockIBinance)(nil).GetAccount), ctx)
}

// GetSavingBalance mocks base method.
func (m *MockIBinance) GetSavingBalance(ctx context.Context) (binance.GetSavingBalanceResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSavingBalance", ctx)
	ret0, _ := ret[0].(binance.GetSavingBalanceResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSavingBalance indicates an expected call of GetSavingBalance.
func (mr *MockIBinanceMockRecorder) GetSavingBalance(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSavingBalance", reflect.TypeOf((*MockIBinance)(nil).GetSavingBalance), ctx)
}

// GetTricker mocks base method.
func (m *MockIBinance) GetTricker(ctx context.Context) (map[string]float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTricker", ctx)
	ret0, _ := ret[0].(map[string]float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTricker indicates an expected call of GetTricker.
func (mr *MockIBinanceMockRecorder) GetTricker(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTricker", reflect.TypeOf((*MockIBinance)(nil).GetTricker), ctx)
}
